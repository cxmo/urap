load("my.emp.df.RData")
# changes to previous approach 
# section by companies first 

# cleaning up companies 
company = my.emp.df$company.tokens 
# company.tb = table(company)[order(table(company), decreasing = T)]

# accenture, bain, deloitte, boston consulting, allen booz hamilton, 
# earnst young, mckinsey, pwc, capgemini, kpmg, oliver wyman, anderson arthur 
# consultancy services tata, bearingpoint, associates zs

find.company = function(company.string, data = company){ 
  company.name = grep(company.string, data) 
  company.name.df = my.emp.df[company.name,]
  return(company.name.df)
} 

accenture = find.company("accenture") 
bain = find.company("\\bbain\\b") 
deloitte = find.company("deloitte") 
boston.consulting = find.company("boston.consulting") 
booz = find.company("\\bbooz\\b") 
ey = find.company("ernst young|\\bey\\b") 
mckinsey = find.company("mckinsey") 
pwc = find.company("pwc|pricewater") 
capgemini = find.company("\\bcapgemini\\b") 
kpmg = find.company("kpmg")
oliver.wyman = find.company("\\bwyman\\b") 
andersen.arthur = find.company("\\bandersen\\b") 
tata = find.company("\\btata") 
bearingpoint = find.company("bearingpoint") 
associates.zs = find.company("associates zs") 

### functions ###
# cleaning up names 
names.clean <- function(dataset){ 
  dataset.tokens <- table(dataset$company.tokens) 
  dataset.tokens <- dataset.tokens[order(dataset.tokens, decreasing = T)] 
  dataset.names <- names(dataset.tokens)
  cutoff = floor(length(dataset.tokens)*0.02) 
  print(cutoff)
  if(cutoff > 0) {
    index = which(dataset.tokens == cutoff)[1]
    if(is.na(index)){ 
      index = 20
    }
    print(index)
    dataset = subset(dataset, company.tokens %in% names(dataset.tokens)[1:index-1])
    return(dataset)
  } else { 
    dataset = subset(dataset, company.tokens %in% names(dataset.tokens)[1:(length(dataset$company.tokens)*0.1)])
    return(dataset)
  }
}

# computing mean for reach position
title.mean = function(dataset){
  dataset$duration = dataset$end - dataset$start + 1
  dataset.mean = aggregate(dataset$duration, list(dataset$title.tokens), function(x) { mean(x, na.rm = T)})
  colnames(dataset.mean) = c("title", "duration") 
  return(dataset.mean)
}

consulting.data = list(accenture, bain, deloitte, boston.consulting, 
booz, ey, mckinsey, pwc, capgemini, kpmg, oliver.wyman, andersen.arthur, 
tata, bearingpoint, associates.zs)

consulting.data = lapply(consulting.data, names.clean)
consulting.data.mean = lapply(consulting.data, title.mean) 

# table(consulting.data.new[[1]]$company.tokens)


# look at aggregate function so we don't have to look at titles.split 
# nohup R CMD BATCH 
